/*
 * expert.ai Natural Language API
 * Natural Language API provides a comprehensive set of natural language understanding capabilities based on expert.ai technology: <ul>   <li>Text subdivision</li>   <li>Part-of-speech tagging</li>   <li>Syntactic analysis</li>   <li>Lemmatization</li>   <li>Keyphrase extraction</li>   <li>Semantic analysis</li>   <li>Named entity recognition</li>   <li>Relation extraction</li>   <li>Sentiment analysis</li>   <li>Classification</li> </ul> 
 *
 * OpenAPI spec version: v2
 * Contact: api.inquiry@expert.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package my.rest.api.nl.bean;

import java.util.Objects;
/**
 * Knowledge Graph topic info
 */
public class DocumentTopic {

  private Long id = null;


  private String label = null;


  private Float score = null;


  private Boolean winner = null;

  public DocumentTopic id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Language-independent topic ID
   * @return id
  **/

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DocumentTopic label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Topic name
   * @return label
  **/
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public DocumentTopic score(Float score) {
    this.score = score;
    return this;
  }

   /**
   * Score assigned to the topic to represent its relevance
   * @return score
  **/
  public Float getScore() {
    return score;
  }

  public void setScore(Float score) {
    this.score = score;
  }

  public DocumentTopic winner(Boolean winner) {
    this.winner = winner;
    return this;
  }

   /**
   * True if the topic is deemed particularly relevant
   * @return winner
  **/
  public Boolean isWinner() {
    return winner;
  }

  public void setWinner(Boolean winner) {
    this.winner = winner;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentTopic documentTopic = (DocumentTopic) o;
    return Objects.equals(this.id, documentTopic.id) &&
        Objects.equals(this.label, documentTopic.label) &&
        Objects.equals(this.score, documentTopic.score) &&
        Objects.equals(this.winner, documentTopic.winner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label, score, winner);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentTopic {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    winner: ").append(toIndentedString(winner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
