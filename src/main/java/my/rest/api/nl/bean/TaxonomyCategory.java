/*
 * expert.ai Natural Language API
 * Natural Language API provides a comprehensive set of natural language understanding capabilities based on expert.ai technology: <ul>   <li>Text subdivision</li>   <li>Part-of-speech tagging</li>   <li>Syntactic analysis</li>   <li>Lemmatization</li>   <li>Keyphrase extraction</li>   <li>Semantic analysis</li>   <li>Named entity recognition</li>   <li>Relation extraction</li>   <li>Sentiment analysis</li>   <li>Classification</li> </ul> 
 *
 * OpenAPI spec version: v2
 * Contact: api.inquiry@expert.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package my.rest.api.nl.bean;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * Taxonomy category
 */
public class TaxonomyCategory {

  private String id = null;

  private String label = null;

  private List<TaxonomyCategory> categories = null;

  public TaxonomyCategory id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Category ID
   * @return id
  **/
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TaxonomyCategory label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Category label
   * @return label
  **/
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public TaxonomyCategory categories(List<TaxonomyCategory> categories) {
    this.categories = categories;
    return this;
  }

  public TaxonomyCategory addCategoriesItem(TaxonomyCategory categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<TaxonomyCategory>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Sub-categories
   * @return categories
  **/
  public List<TaxonomyCategory> getCategories() {
    return categories;
  }

  public void setCategories(List<TaxonomyCategory> categories) {
    this.categories = categories;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxonomyCategory taxonomyCategory = (TaxonomyCategory) o;
    return Objects.equals(this.id, taxonomyCategory.id) &&
        Objects.equals(this.label, taxonomyCategory.label) &&
        Objects.equals(this.categories, taxonomyCategory.categories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label, categories);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxonomyCategory {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
