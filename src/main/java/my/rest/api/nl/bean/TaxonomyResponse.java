/*
 * expert.ai Natural Language API
 * Natural Language API provides a comprehensive set of natural language understanding capabilities based on expert.ai technology: <ul>   <li>Text subdivision</li>   <li>Part-of-speech tagging</li>   <li>Syntactic analysis</li>   <li>Lemmatization</li>   <li>Keyphrase extraction</li>   <li>Semantic analysis</li>   <li>Named entity recognition</li>   <li>Relation extraction</li>   <li>Sentiment analysis</li>   <li>Classification</li> </ul> 
 *
 * OpenAPI spec version: v2
 * Contact: api.inquiry@expert.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package my.rest.api.nl.bean;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * Taxonomy categories
 */
public class TaxonomyResponse {
  private Boolean success = null;

  private List<ServiceError> errors = null;

  private List<Taxonomy> data = null;

  public TaxonomyResponse success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * Operation completed successfully (true/false)
   * @return success
  **/
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }

  public TaxonomyResponse errors(List<ServiceError> errors) {
    this.errors = errors;
    return this;
  }

  public TaxonomyResponse addErrorsItem(ServiceError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<ServiceError>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Service errors
   * @return errors
  **/
  public List<ServiceError> getErrors() {
    return errors;
  }

  public void setErrors(List<ServiceError> errors) {
    this.errors = errors;
  }

  public TaxonomyResponse data(List<Taxonomy> data) {
    this.data = data;
    return this;
  }

  public TaxonomyResponse addDataItem(Taxonomy dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<Taxonomy>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  public List<Taxonomy> getData() {
    return data;
  }

  public void setData(List<Taxonomy> data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxonomyResponse taxonomyResponse = (TaxonomyResponse) o;
    return Objects.equals(this.success, taxonomyResponse.success) &&
        Objects.equals(this.errors, taxonomyResponse.errors) &&
        Objects.equals(this.data, taxonomyResponse.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, errors, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxonomyResponse {\n");
    
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
